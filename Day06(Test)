package Test;

import java.util.Random;

public class test {
    public static void main(String[] args) {
        for (int i = 0; i < 100; i++) {
            Random rad = new Random();
            int r = rad.nextInt(5);
            System.out.println(r);
        }

    }
}




package Test;

public class Test01 {
    public static void main(String[] args) {
        //定义一个方法，该方法能够找出两个小数中的较小值并返回。在主方法中调用方法进行测试。
        double a = 645.2;
        double b = 465.5;
        System.out.println("最小值为:" + getMin(a,b));
    }
    public static double getMin(double num1,double num2){
        return num1<num2?num1:num2;
    }
}




package Test;

import java.util.Scanner;

public class Test02 {
    public static void main(String[] args) {
        //定义一个方法，该方法能够找出三个整数中的最大值并返回。在主方法中调用方法测试执行。
        int a = new Scanner(System.in).nextInt();
        int b = new Scanner(System.in).nextInt();
        int c = new Scanner(System.in).nextInt();
        int max = getMax(a,b,c);
        System.out.println("最大值为:"+max);
    }
    public static int getMax(int num1,int num2,int num3){
        int arr[] = {num1,num2,num3};
        int max = num1;
        for (int i = 1; i < arr.length; i++) {
            if (max < arr[i]) {
                max = arr[i];
            }
        }return max;
    }
}




package Test;

import java.util.Scanner;
import java.util.zip.Inflater;

public class Test03 {
    public static void main(String[] args) {
        //在主方法中通过键盘录入三个整数。定义一个方法，方法接收三个整数变量，在方法中从大到小依次打印三个变量。执行效果如下：
        //请输入第一个整数：10
        //请输入第二个整数：30
        //请输入第三个整数：20
        //从大到小的顺序是： 30 20 10
        int a = new Scanner(System.in).nextInt();
        int b = new Scanner(System.in).nextInt();
        int c = new Scanner(System.in).nextInt();
        method(a,b,c);
        /*for (int i = 0; i < arr.length; i++) {
            System.out.println(arr[i]);
        }*/
    }
    public static void method(int num1,int num2,int num3){
        int arr[] = {num1,num2,num3};//11  15  12
        int max =0;
        int temp = 0;
        for (int i = 0; i < arr.length-1; i++) {
            if (arr[i] < arr[i + 1]) {
                max = arr[i + 1];
                arr[i + 1] = arr[i];
                arr[i] = max;
            }
            if(arr[0]<arr[1]) {
                max = arr[1];
                arr[1] = arr[0];
                arr[0] = max;
            }
            System.out.print("从大到小的顺序是：");
            }
        for (int i = 0; i < arr.length; i++) {
            System.out.print(arr[i]+" ");
        }
    }
}




package Test;

import java.util.Scanner;

public class Test04 {
    public static void main(String[] args) {
        //数字是有绝对值的，负数的绝对值是它本身取反，非负数的绝对值是它本身。
        //请定义一个方法，方法能够得到小数类型数字的绝对值并返回。请定义方法并测试。
        double a = new Scanner(System.in).nextDouble();
        System.out.println("输入的小数为："+a);
        System.out.println("小数的绝对值为："+ juedui(a));
    }
    public static double juedui(double num){
        if (num < 0){
            return -num;
        }else return num;
    }
}




package Test;

import java.util.Scanner;

public class Test05 {
    public static void main(String[] args) {
        //键盘录入一个正整数
        //定义一个方法,该方法的功能是计算该数字是几位数字,并将位数返回
        //在main方法中打印该数字是几位数
        int a = new Scanner(System.in).nextInt();
        System.out.println(a + "是"+getNum(a)+"位数");

    }
   public static int getNum(int num){
        int count = 0;
       for (int i = num; i >= 1; count++) {
           i = i / 10;
           if (num == 0) break;
       }
       return count;
   }

}




package Test;

public class Test06 {
    public static void main(String[] args) {
        //需求：定义一个方法equals(int[] arr1,int[] arr2).
        //功能：比较两个数组是否相等（长度和内容均相等则认为两个数组是相同的）
        int arr1[] = {1,2,3,4,5};
        int arr2[] = {1,2,3,4,5};
        int arr3[] = {2,3,4,6};
        int arr4[] = {1,2,3,4,6};
        int num = equals(arr1,arr2);
        System.out.println(num);
        if (num == 1)System.out.println("两个数组相同");
        else System.out.println("两个数组不相同");
    }
    public static int equals(int arr1[],int arr2[]){
        int flag = 0;
        if (arr1.length != arr2.length) {
            return flag;
        }
        else{
        for (int i = 0; i < arr1.length ; i++) {
            flag = 0;
            if (arr1[i] == arr2[i]) {
                flag = 1;
            }
            else
            return flag;
        }
        }
        return flag;
    }
}




package Test;

import java.util.Scanner;

public class Test07 {
    public static void main(String[] args) {
        //需求：定义一个方法fill(int[] arr,int value)
        //功能：将数组arr中的所有元素的值改为value
        int arr[] = {1,2,3,4,5,6};
        int value = new Scanner(System.in).nextInt();
        int newArr[] = getValue(arr,value);
        for (int i = 0; i < arr.length; i++) {
            System.out.print(newArr[i] + " ");
        }
    }
    public static int [] getValue(int[] arr,int value){
        int i;
        for ( i = 0; i < arr.length; i++) {
            arr[i] = value;
        }
       return arr;
    }
}




package Test;

import java.util.Scanner;

public class Test08 {
    public static void main(String[] args) {
        //需求：定义一个方法fill(int[] arr,int fromIndex,int toIndex,int value)
        //功能：将数组arr中的元素从索引fromIndex开始到toIndex（不包含toIndex）对应的值改为value
        int arr[] = {1,2,3,4,5,6,7,8,9,10};
        System.out.println("请输入从第几个索引开始");
        int from = new Scanner(System.in).nextInt();
        System.out.println("请输入到第几个索引结束");
        int to = new Scanner(System.in).nextInt();
        System.out.println("请输入要替换的数");
        int value = new Scanner(System.in).nextInt();
        int newArr[] = fill(arr,from,to,value);
        for (int i = 0; i < newArr.length; i++) {
            System.out.print(newArr[i] + " ");
        }
    }
    public static int[] fill(int arr[],int fromIndex,int toIndex,int value){
        int fillArr[] = arr;
        for (int i = 0; i < fillArr.length; i++) {
            for (int j = fromIndex; j < toIndex; j++) {
                fillArr[j] = value;
            }
        }
        return fillArr;
    }
}




package Test;

import java.util.Scanner;

public class Test09 {
    public static void main(String[] args) {
        //需求：定义一个方法copyOf(int[] arr, int newLength)
        //功能：将数组arr中的newLength个元素拷贝到新数组中，并将新数组返回，从索引为0开始
        int arr[] = {1,2,3,4,5,6,7,8,9,10};
        System.out.println("请输入你要拷贝的个数");
        int newLength = new Scanner(System.in).nextInt();
        int newArr[] = copyOf(arr,newLength);
        for (int i = 0; i < newArr.length; i++) {
            System.out.println(newArr[i]);
        }
    }
    public static int [] copyOf(int arr[], int newLength){
        int copyArr[] = new int[newLength];
        for (int i = 0; i < copyArr.length; i++) {
            copyArr[i] = arr[i];
        }
        return copyArr;
    }
}




package Test;

import java.util.Scanner;

public class Test10 {
    public static void main(String[] args) {
        //需求：定义一个方法copyOfRange(int[] arr,int from, int to)
        //功能：将数组arr中从索引from（包含from）开始，到索引to结束（不包含to）的元素复制到新数组中，
        // 并将新数组返回。
        int arr[] = {1,2,3,4,5,6,7,8,9,10};
        System.out.println("请输入从第几个索引开始");
        int from = new Scanner(System.in).nextInt();
        System.out.println("请输入到第几个索引结束");
        int to = new Scanner(System.in).nextInt();
       int newArr[] = copyOfRange(arr,from,to);
        for (int i = 0; i < newArr.length; i++) {
            System.out.println(newArr[i]);
        }
    }
    public static int[] copyOfRange(int arr[],int from,int to){
        int fillArr[] = new int[to - from];
        int index = 0;
        for (int i = from; i < to; i++) {
            fillArr[index] = arr[i];
            index++;
        }
        return fillArr;
    }
}


package Test;

import java.util.Random;

public class Test11 {
    public static void main(String[] args) {
        //一个大V直播抽奖，奖品是现金红包，
        // 分别有{2,588,888,1000,10000}五个奖金。
        // 请使用代码模拟抽奖，打印出每个奖项，奖项的出现顺序要随机且不重复。
        // 打印效果如下：（随机顺序，不一定是下面的顺序）
        //888元的奖金被抽出
        //588元的奖金被抽出
        //10000元的奖金被抽出
        //1000元的奖金被抽出
        //2元的奖金被抽出
        int arr[] = {2,588,888,1000,10000};
        Array(arr);
    }
    public static void Array(int arr[]){
        int temp = 0;
        for (int i = 0; i < arr.length; i++) {
            Random rad = new Random();
            int r = rad.nextInt(arr.length);
            temp = arr[i];
            arr[i] = arr[r];
            arr[r] = temp;
        }
        for (int i = 0; i < arr.length; i++) {
            System.out.println(arr[i]+"元的奖金被抽出");
        }
    }
}
