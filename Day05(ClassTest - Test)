package ClassTest;

public class Test01 {
    public static void main(String[] args) {
        /*朋友聚会的时候可能会玩一个游戏：逢7过
        游戏规则：从任意一个数字开始报数，当你要报的数字是包含7或者是7的倍数时都要说过：过
        需求：使用程序在控制台打印出1-100之间的满足逢七必过规则的数据*/
        int i = 1;
        for (; i <= 100; i++) {
            if (i % 10 == 7 || i % 7 == 0 || i / 10 % 10 == 7) {
                System.out.println("过");
                continue;
            }
            System.out.println(i);
        }

    }
}




package ClassTest;

import java.util.Scanner;

public class Test02 {
    public static void main(String[] args) {
        System.out.println("请录入一个整数");
        int a = new Scanner(System.in).nextInt();
        for (int i = 1 ; i <= a; i++) {
            if (i*i == a ){
                System.out.println(i + "就是" + a + "的平方根");
                break;
            }else if (i * i > a){
                System.out.println((i - 1) + "就是" + a + "的平方根");
                break;
            }
        }
    }
}



package ClassTest;

import java.util.Scanner;

public class Test03 {
    public static void main(String[] args) {
        //需求：键盘录入一个正整数 x ，判断该整数是否为一个质数。
        //质数：
        //如果一个整数只能被1和本身整除，那么这个数就是质数。否则这个数叫做合数
        //7 = 1 * 7 质数
        //8 = 1 * 8  2 * 4 合数
        int x = new Scanner(System.in).nextInt();
        boolean flag = true;
        for (int i = 2; i <= x-1; i++) {
            if(x % i == 0) {
                flag = false;
                break;
            }
        }
        if (flag){
            System.out.println(x + "是一个质数");
        }else System.out.println(x + "不是质数");

        //简单方法在下一个Class----Test04
    }
}




package ClassTest;

public class Test04 {
    public static void main(String[] args) {
        // 100000
        // 2 ~ 99999
        //循环的次数：将近10万次

        //推荐一个简化的思路
        //81
        //1 * 81
        //3 * 27
        //9 * 9

        //以81的平方根9，为中心
        //而且假设 a * b = 81
        //那么a和b中，其中有一个必定是小于等于9的。
        //另一个是大于等于9的。

        //假设，都是大于9 --- 9.1 * 9.1 > 81
        //假设，都是小于9 --- 8.9 * 8.9 < 81
        //其中一个数字一定是小于等于平方根
        //另外一个数字一定是大于等于平方根

        int number = 100;
        //如果这个范围之内，所有的数字都不能被number整除
        //那么number就一定是一个质数。
       /* for (int i = 2; i <= number的平方根; i++) {

        }*/
    }
}





package ClassTest;

import java.util.Random;

public class Test05 {
    public static void main(String[] args) {
        Random r = new Random();
        for (int i = 0; i <=100; i++) {  // i<=100--生成100+1个数
            int number = r.nextInt(10);// [0-9)  100个数的范围在[0,9)
            System.out.println(number);
        }
        }
    }





package ClassTest;

import java.util.Random;

public class Test06 {
    public static void main(String[] args) {
        /*Random r = new Random();
        for (int i = 1; i < 10; i++) {
            int number = r.nextInt(101);// [0,100]
            System.out.println(number);
        }*/
        //
        int arr[] = {1,2,3,4,5};
        Random r = new Random();

        for (int i = 0; i < arr.length; i++) {
            int num = r.nextInt(arr.length);
            int temp;
            temp = arr[i];
            arr[i] = arr[num];
            arr[num] = temp;
        }
        for (int i = 0; i < arr.length; i++) {
            System.out.println(arr[i]);
        }
    }

}



package ClassTest;

import java.util.Random;
import java.util.Scanner;

public class Test07 {
    public static void main(String[] args) {
        //需求：程序自动生成一个1-100之间的随机数字，使用程序实现猜出这个数字是多少？
        //扩展小需求：加一个保底机制，3次猜不中，直接提示猜中了。'
        int count = 0;
        Random r = new Random();
        int number = r.nextInt(100) + 1; //不能写在循环的里面的，否则每一次都会产生一个新的随机数
        while (true) {
            System.out.println("请输入你要猜的数字：");
            int guess = new Scanner(System.in).nextInt();
           /* count++;
            if(count == 5){
                System.out.println("猜对了");
                break;
            }*/
            if (guess > number) {
                System.out.println("猜大了");
            } else if (guess < number) {
                System.out.println("猜小了");
            } else {
                System.out.println("猜对了");
                break;
            }
        }
    }
}




package Test;

public class Test01 {
    public static void main(String[] args) {
        //请创建一个长度为5的整数数组，并为数组中的元素赋值。
        // 遍历数组，打印所有元素，元素之间用空格隔开。比如：
        /*数组为：{1,2,3,4,5}
        打印结果：1 2 3 4 5
        */
        int arr[] = new int[]{11,22,33,44,55};
        for (int i = 0; i < arr.length; i++) {
            System.out.print(arr[i] + " ");
        }
    }
}




package Test;

public class Test02 {
    public static void main(String[] args) {
        //现有一个小数数组{12.9, 53.54, 75.0, 99.1, 3.14}。
        // 请编写代码，找出数组中的最小值并打印。
        double arr[] = {12.9, 53.54, 75.0, 99.1, 3.14};
        double min = arr[0];
        for (int i = 0; i < arr.length; i++) {
            if (arr[i] < min) {
                min = arr[i];
            }
        }
        System.out.println("最小值为" + min);
    }
}




package Test;

import java.util.Random;

public class Test03 {
    public static void main(String[] args) {
        //创建一个长度为6的整数数组。
        // 请编写代码，随机生成六个0（包含）-100（不包含）之间的整数存放到数组中，
        // 然后计算出数组中所有元素的和并打印。
        int arr[] = new int[6];
        Random r = new Random();
        int sum = 0;
        for (int i = 0; i < arr.length; i++) {
            int number = r.nextInt(100);
            sum = sum + number;
            System.out.println(number);
        }
        System.out.println(sum);
    }
}




package Test;

public class Test04 {
    public static void main(String[] args) {
        /*现有一个整数数组，数组中的每个元素都是[0-9]之间的数字，
        从数组的最大索引位置开始到最小索引位置，
        依次表示整数的个位、十位、百位。。。依次类推。
        请编写程序计算，这个数组所表示的整数值。例如：
            数组：{2, 1, 3, 5, 4}
        表示的整数为：21354 // 注：是整数类型的两万一千三百五十四，不是字符串拼起来的。*/
        int arr[] = {1,3,4,5,6};
        int number = 0;
        for (int i = 0; i < arr.length; i++) {
            number = number * 10 + arr[i];
        }System.out.println(number);

    }
}




package Test;

public class Test05 {
    public static void main(String[] args) {
        //定义一个数组来存储10个学生的成绩，
        // 例如：{72, 89, 65, 87, 91, 82, 71, 93, 76, 68}。
        // 计算并输出学生的平均成绩。
        int arr[] = {72, 89, 65, 87, 91, 82, 71, 93, 76, 68};
        int sum = 0;

        for (int i = 0; i < arr.length; i++) {
            sum = sum + arr[i];
        }
        double average = sum * 1.0 / arr.length;
        System.out.println("平均值为" + average);
        for (int i = 0; i < arr.length; i++) {
            System.out.println(arr[i]);
        }
    }
}




package Test;

import java.util.Scanner;

public class Test06 {
    public static void main(String[] args) {
        //有一个数组，其中有十个元素从小到大依次排列 {12,14,23,45,66,68,70,77,90,91}。
        //再通过键盘录入一个整数数字。
        //要求：把数字放入数组序列中，生成一个新的数组，并且数组的元素依旧是从小到大排列的。
        /*执行效果如下：
        请输入一个整数数字：
        50
        生成的新数组是：12 14 23 45 50 66 68 70 77 90 91*/
        /*1. 定义原数组arr，和一个比原数组长度大1的新数组brr。
        2. 通过键盘录入的方式输入变量num的值。
        3. 定义变量index用于记录num存放的索引位置。
        4. 遍历数组，小于或等于num的元素直接存放到原来的位置，大于num的元素往后移动一个位置。
        5. 存放结束之后，中间会空出一个位置,在遍历时用index记录这个位置。把num放在这个索引处。
        6. 最终遍历新数组打印结果。*/
        int[] arr1 = {12, 14, 23, 45, 66, 68, 70, 77, 90, 91};
        int[] arr2 = new int[11];
        System.out.println("请录入一个整数");
        int x = new Scanner(System.in).nextInt();
        int index = 0;
        for (int i = 0; i < arr1.length; i++) {
            if (arr1[i] <= x) {
                arr2[i] = arr1[i];
                index = i + 1;
            } else arr2[i + 1] = arr1[i];
            arr2[index] = x;
        }
        System.out.println("新的数组为：");
        for (int i = 0; i < arr2.length; i++) {
            System.out.print(arr2[i] + "\t");
        }

    }
}




package Test;

public class Test07 {
    public static void main(String[] args) {
        /*定义一个数组其中包含多个数字。
        用自己的方式最终实现，奇数放在数组的左边，偶数放在数组的右边。
        （可以创建其他数组，不必须在原数组中改变）*/
        int arr1[] = {70,34,65,15,78,2,63,45,98};
        int arr2[] = new int[arr1.length];
        int left = 0;
        int right = arr1.length - 1;
        for (int i = 0; i < arr1.length; i++) {
            if (arr1[i] % 2 == 1){
                arr2[left] = arr1[i];
                left++;
            }else
            {arr2[right] = arr1[i];
                right--;
            }
        }
        for (int i = 0; i < arr2.length; i++) {
            System.out.print(arr2[i] + "\t");
        }
    }
}

